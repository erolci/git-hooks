#!/bin/sh
set -e

if [ "$VERBOSITY" -gt 1 ]
then
    shopt=x
else
    shopt=
fi

uses_jest ()
{
    if echo "$test_script" | grep -q jest
    then
        return 0
    fi

    if echo "$test_script" | grep -Eq '^[[:space:]]*node([[:space:]]+-[^[:space:]]+)*[[:space:]][^[:space:]]+$'
    then
        script="$( echo "$test_script" | grep -Eo '[^[:space:]]+$' )"
        grep -q '\<jest\>' "$script"
        return $?
    fi

    return 1
}

if [ -n "$RANGE" ]
then
    if git diff --quiet
    then
        stashed=
    else
        git stash --keep-index --message="Stashed for running tests"
        stashed=1
    fi

    test_script="$( npm run | grep -A1 '^  test$' | tail -n+2 )"
    set +e
    if uses_jest "$test_script"
    then
        # TODO Use --changedSince if forcedFiles is not set
        # TODO If list is too long, fallâ€“back to running all tests
        {
            git config --get "$CONFIG_NAMESPACE.forcedFiles" || :
            git diff --name-only "$RANGE"
        } | $XARGS "$SHELL" -$-"$shopt"c 'npm test --silent -- --ci --color --coverage=no --passWithNoTests --findRelatedTests "$@"' --
    else
        npm test --silent
    fi
    test_exit_code=$?
    set -e

    if [ "$stashed" = 1 ]
    then
        git stash pop
    fi

    if [ "$test_exit_code" != "0" ]
    then
        false
    fi
fi
